// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  age   Int?
  posts Post[]

  @@map("users")
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author_id Int
  author    User    @relation(fields: [author_id], references: [id])

  @@map("posts")
}

model Chat {
  id         String   @id @default(uuid())
  title      String?
  content    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // Relação opcional com Task (1:1)
  task Task?

  @@map("chats")
}

model Task {
  id                        String   @id @default(uuid())
  title                     String
  description               String
  steps                     String? // Will store as JSON string
  estimated_time            String
  implementation_suggestion String?
  acceptance_criteria       String? // Will store as JSON string
  suggested_tests           String? // Will store as JSON string
  content                   String? // Combined markdown version
  chat_history              String? // Will store as JSON string
  created_at                DateTime @default(now())
  updated_at                DateTime @updatedAt

  // Relação obrigatória com Chat (1:1) - temporariamente opcional para migração
  chat_id String?  @unique
  chat    Chat? @relation(fields: [chat_id], references: [id])

  @@map("tasks")
}
