// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Chat {
  id         String   @id @default(uuid())
  title      String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  messages ChatMessage[]

  @@map("chats")
}

enum ChatMessageRole {
  user
  assistant
  system
}

model ChatMessage {
  id         String   @id @default(uuid())
  content    String
  role ChatMessageRole @default(user)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  chat_id String
  chat Chat @relation(fields: [chat_id], references: [id])

  task Task?

  @@map("chat_messages")
}

model Task {
  id                        String   @id @default(uuid())
  title                     String
  description               String
  steps                     String? // Will store as JSON string
  estimated_time            String
  implementation_suggestion String?
  acceptance_criteria       String? // Will store as JSON string
  suggested_tests           String? // Will store as JSON string
  created_at                DateTime @default(now())
  updated_at                DateTime @updatedAt

  chat_message    ChatMessage? @relation(fields: [chat_message_id], references: [id])
  chat_message_id String?  @unique

  @@map("tasks")
}
